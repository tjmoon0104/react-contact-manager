{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","console","log","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","uuid","post","history","push","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6c028ed.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action))\n    },\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n    this.setState({ contacts: res.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  }\n\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo })\n  }\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact\n    const { showContactInfo } = this.state\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem',\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact List</span>\n              </h1>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n  const { branding } = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'Contact Manager',\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text',\n}\n\nexport default TextInputGroup\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport { v4 as uuid } from 'uuid'\nimport axios from 'axios'\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n\n    const { name, email, phone } = this.state\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } })\n      return\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } })\n      return\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } })\n      return\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone,\n    }\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    )\n    dispatch({ type: 'ADD_CONTACT', payload: res.data })\n    this.setState({ name: '', email: '', phone: '', errors: {} })\n    this.props.history.push('/')\n  }\n  render() {\n    const { name, email, phone, errors } = this.state\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    onChange={this.onChange}\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    name=\"name\"\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    name=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    onChange={this.onChange}\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    name=\"phone\"\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    )\n    const contact = res.data\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n\n    const { name, email, phone } = this.state\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } })\n      return\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } })\n      return\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } })\n      return\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone,\n    }\n\n    const { id } = this.props.match.params\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    )\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\n\n    this.setState({ name: '', email: '', phone: '', errors: {} })\n    this.props.history.push('/')\n  }\n  render() {\n    const { name, email, phone, errors } = this.state\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    onChange={this.onChange}\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    name=\"name\"\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    name=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    onChange={this.onChange}\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    name=\"phone\"\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry Page not Found</p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: '',\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          title: data.title,\n          body: data.body,\n        })\n      )\n  }\n\n  // componentWillMount() {\n  //   console.log('component will mount')\n  // }\n  //\n  // componentDidUpdate(prevProps, prevState, snapshot) {\n  //   console.log('component did update')\n  // }\n  //\n  // componentWillUpdate(nextProps, nextState, nextContext) {\n  //   console.log('component will update')\n  // }\n\n  render() {\n    const { title, body } = this.state\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts'\nimport Header from './components/layout/Header'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport About from './components/pages/About'\nimport { Provider } from './context'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}